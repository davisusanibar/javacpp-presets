// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class TimestampScalar extends BaseTimestampScalar {
    static { Loader.load(); }

  
  
    public TimestampScalar(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value, @SharedPtr @Cast({"", "std::shared_ptr<arrow::DataType>"}) DataType type) { super((Pointer)null); allocate(value, type); }
    private native void allocate(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value, @SharedPtr @Cast({"", "std::shared_ptr<arrow::DataType>"}) DataType type);
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TimestampScalar(Pointer p) { super(p); }


  public TimestampScalar(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    TimeUnit.type unit, @StdString String tz/*=""*/) { super((Pointer)null); allocate(value, unit, tz); }
  private native void allocate(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    TimeUnit.type unit, @StdString String tz/*=""*/);
  public TimestampScalar(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    TimeUnit.type unit) { super((Pointer)null); allocate(value, unit); }
  private native void allocate(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    TimeUnit.type unit);
  public TimestampScalar(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    @Cast("arrow::TimeUnit::type") int unit, @StdString BytePointer tz/*=""*/) { super((Pointer)null); allocate(value, unit, tz); }
  private native void allocate(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    @Cast("arrow::TimeUnit::type") int unit, @StdString BytePointer tz/*=""*/);
  public TimestampScalar(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    @Cast("arrow::TimeUnit::type") int unit) { super((Pointer)null); allocate(value, unit); }
  private native void allocate(@Cast("arrow::TemporalScalar<arrow::TimestampType>::ValueType") long value,
                    @Cast("arrow::TimeUnit::type") int unit);

  public static native @ByVal TimestampScalarResult FromISO8601(@ByVal @StdString String iso8601,
                                               TimeUnit.type unit);
  public static native @ByVal TimestampScalarResult FromISO8601(@ByVal @StdString String iso8601,
                                               @Cast("arrow::TimeUnit::type") int unit);
}
