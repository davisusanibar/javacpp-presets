// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class DenseUnionScalar extends UnionScalar {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DenseUnionScalar(Pointer p) { super(p); }


  // For DenseUnionScalar, we can make a valid ArraySpan of length 1 from this
  // scalar
  public native @SharedPtr @Cast({"", "std::shared_ptr<arrow::Scalar>"}) Scalar value(); public native DenseUnionScalar value(Scalar setter);

  public native @SharedPtr @Cast({"", "std::shared_ptr<arrow::Scalar>"}) Scalar child_value();

  public DenseUnionScalar(@SharedPtr @Cast({"", "std::shared_ptr<arrow::Scalar>"}) Scalar value, byte type_code, @SharedPtr @Cast({"", "std::shared_ptr<arrow::DataType>"}) DataType type) { super((Pointer)null); allocate(value, type_code, type); }
  private native void allocate(@SharedPtr @Cast({"", "std::shared_ptr<arrow::Scalar>"}) Scalar value, byte type_code, @SharedPtr @Cast({"", "std::shared_ptr<arrow::DataType>"}) DataType type);
}
