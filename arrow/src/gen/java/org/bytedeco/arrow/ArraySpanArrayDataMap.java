// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;

@NoOffset @Name("std::variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData> >") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class ArraySpanArrayDataMap extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ArraySpanArrayDataMap(Pointer p) { super(p); }
    public ArraySpanArrayDataMap(ArraySpan value) { this(); put(value); }
    public ArraySpanArrayDataMap(@Cast({"", "std::shared_ptr<arrow::ArrayData>"}) ArrayData value) { this(); put(value); }
    public ArraySpanArrayDataMap()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef ArraySpanArrayDataMap put(@ByRef ArraySpanArrayDataMap x);

    public @ByRef ArraySpan get0() { return get0(this); }
    @Namespace @Name("std::get<0>") public static native @ByRef ArraySpan get0(@ByRef ArraySpanArrayDataMap container);
    @ValueSetter public native ArraySpanArrayDataMap put(@ByRef ArraySpan value);
    public @SharedPtr @Cast({"", "std::shared_ptr<arrow::ArrayData>"}) ArrayData get1() { return get1(this); }
    @Namespace @Name("std::get<1>") public static native @SharedPtr @Cast({"", "std::shared_ptr<arrow::ArrayData>"}) ArrayData get1(@ByRef ArraySpanArrayDataMap container);
    @ValueSetter public native ArraySpanArrayDataMap put(@SharedPtr @Cast({"", "std::shared_ptr<arrow::ArrayData>"}) ArrayData value);
}

