// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class GlobalOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public GlobalOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public GlobalOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public GlobalOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public GlobalOptions position(long position) {
        return (GlobalOptions)super.position(position);
    }
    @Override public GlobalOptions getPointer(long i) {
        return new GlobalOptions((Pointer)this).offsetAddress(i);
    }

  /** Path to text timezone database. This is only configurable on Windows,
   *  which does not have a compatible OS timezone database. */
  public native @StdString @Optional @Cast({"char*", "std::string*"}) BytePointer timezone_db_path(); public native GlobalOptions timezone_db_path(BytePointer setter);
}
