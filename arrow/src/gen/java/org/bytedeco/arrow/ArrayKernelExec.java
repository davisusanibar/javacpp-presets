// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief The scalar kernel execution API that must be implemented for SCALAR
 *  kernel types. This includes both stateless and stateful kernels. Kernels
 *  depending on some execution state access that state via subclasses of
 *  KernelState set on the KernelContext object. Implementations should
 *  endeavor to write into pre-allocated memory if they are able, though for
 *  some kernels (e.g. in cases when a builder like StringBuilder) must be
 *  employed this may not be possible. */
@Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class ArrayKernelExec extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    ArrayKernelExec(Pointer p) { super(p); }
    protected ArrayKernelExec() { allocate(); }
    private native void allocate();
    public native @ByVal Status call(KernelContext arg0, @Const @ByRef ExecSpan arg1, ExecResult arg2);
}
