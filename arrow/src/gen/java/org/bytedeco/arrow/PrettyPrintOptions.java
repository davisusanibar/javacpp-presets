// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class PrettyPrintOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PrettyPrintOptions(Pointer p) { super(p); }

  public PrettyPrintOptions() { super((Pointer)null); allocate(); }
  private native void allocate();

  public PrettyPrintOptions(int indent,
                       int window/*=10*/, int indent_size/*=2*/, @StdString String null_rep/*="null"*/,
                       @Cast("bool") boolean skip_new_lines/*=false*/, @Cast("bool") boolean truncate_metadata/*=true*/,
                       int container_window/*=2*/) { super((Pointer)null); allocate(indent, window, indent_size, null_rep, skip_new_lines, truncate_metadata, container_window); }
  private native void allocate(int indent,
                       int window/*=10*/, int indent_size/*=2*/, @StdString String null_rep/*="null"*/,
                       @Cast("bool") boolean skip_new_lines/*=false*/, @Cast("bool") boolean truncate_metadata/*=true*/,
                       int container_window/*=2*/);
  public PrettyPrintOptions(int indent) { super((Pointer)null); allocate(indent); }
  private native void allocate(int indent);
  public PrettyPrintOptions(int indent,
                       int window/*=10*/, int indent_size/*=2*/, @StdString BytePointer null_rep/*="null"*/,
                       @Cast("bool") boolean skip_new_lines/*=false*/, @Cast("bool") boolean truncate_metadata/*=true*/,
                       int container_window/*=2*/) { super((Pointer)null); allocate(indent, window, indent_size, null_rep, skip_new_lines, truncate_metadata, container_window); }
  private native void allocate(int indent,
                       int window/*=10*/, int indent_size/*=2*/, @StdString BytePointer null_rep/*="null"*/,
                       @Cast("bool") boolean skip_new_lines/*=false*/, @Cast("bool") boolean truncate_metadata/*=true*/,
                       int container_window/*=2*/);

  public static native @ByVal PrettyPrintOptions Defaults();

  /** Number of spaces to shift entire formatted object to the right */
  public native int indent(); public native PrettyPrintOptions indent(int setter);

  /** Size of internal indents */
  public native int indent_size(); public native PrettyPrintOptions indent_size(int setter);

  /** Maximum number of elements to show at the beginning and at the end. */
  public native int window(); public native PrettyPrintOptions window(int setter);

  /** Maximum number of elements to show at the beginning and at the end, for elements
   *  that are containers (that is, list in ListArray and chunks in ChunkedArray) */
  public native int container_window(); public native PrettyPrintOptions container_window(int setter);

  /** String to use for representing a null value, defaults to "null" */
  public native @StdString String null_rep(); public native PrettyPrintOptions null_rep(String setter);

  /** Skip new lines between elements, defaults to false */
  public native @Cast("bool") boolean skip_new_lines(); public native PrettyPrintOptions skip_new_lines(boolean setter);

  /** Limit display of each KeyValueMetadata key/value pair to a single line at
   *  80 character width */
  public native @Cast("bool") boolean truncate_metadata(); public native PrettyPrintOptions truncate_metadata(boolean setter);

  /** If true, display field metadata when pretty-printing a Schema */
  public native @Cast("bool") boolean show_field_metadata(); public native PrettyPrintOptions show_field_metadata(boolean setter);

  /** If true, display schema metadata when pretty-printing a Schema */
  public native @Cast("bool") boolean show_schema_metadata(); public native PrettyPrintOptions show_schema_metadata(boolean setter);
}
