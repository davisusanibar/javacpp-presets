// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow::compute") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class RandomOptions extends FunctionOptions {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RandomOptions(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public RandomOptions(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public RandomOptions position(long position) {
        return (RandomOptions)super.position(position);
    }
    @Override public RandomOptions getPointer(long i) {
        return new RandomOptions((Pointer)this).offsetAddress(i);
    }

  public enum Initializer { SystemRandom(0), Seed(1);

      public final int value;
      private Initializer(int v) { this.value = v; }
      private Initializer(Initializer e) { this.value = e.value; }
      public Initializer intern() { for (Initializer e : values()) if (e.value == value) return e; return this; }
      @Override public String toString() { return intern().name(); }
  }

  public static native @ByVal RandomOptions FromSystemRandom();
  public static native @ByVal RandomOptions FromSeed(@Cast("uint64_t") long seed);

  public RandomOptions(Initializer initializer, @Cast("uint64_t") long seed) { super((Pointer)null); allocate(initializer, seed); }
  private native void allocate(Initializer initializer, @Cast("uint64_t") long seed);
  public RandomOptions(@Cast("arrow::compute::RandomOptions::Initializer") int initializer, @Cast("uint64_t") long seed) { super((Pointer)null); allocate(initializer, seed); }
  private native void allocate(@Cast("arrow::compute::RandomOptions::Initializer") int initializer, @Cast("uint64_t") long seed);
  public RandomOptions() { super((Pointer)null); allocate(); }
  private native void allocate();
  @MemberGetter public static native byte kTypeName(int i);
  @MemberGetter public static native String kTypeName();
  public static native @ByVal RandomOptions Defaults();

  /** The type of initialization for random number generation - system or provided seed. */
  public native Initializer initializer(); public native RandomOptions initializer(Initializer setter);
  /** The seed value used to initialize the random number generation. */
  public native @Cast("uint64_t") long seed(); public native RandomOptions seed(long setter);
}
