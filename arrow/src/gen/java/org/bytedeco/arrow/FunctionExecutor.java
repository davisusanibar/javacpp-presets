// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief An executor of a function with a preconfigured kernel */
@Namespace("arrow::compute") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class FunctionExecutor extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FunctionExecutor(Pointer p) { super(p); }

  /** \brief Initialize or re-initialize the preconfigured kernel
   * 
   *  This method may be called zero or more times. Depending on how
   *  the FunctionExecutor was obtained, it may already have been initialized. */
  
  ///
  ///
  public native @ByVal Status Init(@Const FunctionOptions options/*=nullptr*/,
                        ExecContext exec_ctx/*=nullptr*/);
  public native @ByVal Status Init();
  /** \brief Execute the preconfigured kernel with arguments that must fit it
   * 
   *  The method requires the arguments be castable to the preconfigured types.
   * 
   *  @param args [in] Arguments to execute the function on
   *  @param length [in] Length of arguments batch or -1 to default it. If the
   *  function has no parameters, this determines the batch length, defaulting
   *  to 0. Otherwise, if the function is scalar, this must equal the argument
   *  batch's inferred length or be -1 to default to it. This is ignored for
   *  vector functions. */
  public native @ByVal DatumResult Execute(@Const @ByRef DatumVector args, @Cast("int64_t") long length/*=-1*/);
  public native @ByVal DatumResult Execute(@Const @ByRef DatumVector args);
}
